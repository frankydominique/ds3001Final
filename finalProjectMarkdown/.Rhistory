knitr::opts_chunk$set(echo = TRUE)
df <- read_csv('song_data.csv')
library(tidyverse)
library(plotly)
library(htmltools)
library(devtools)
library(caret)
library(NbClust)
library(rmarkdown)
df <- read_csv('song_data.csv')
View(df)
sum(is.na(df))
dfs <- as.data.frame(scale(df[2:15]))
View(dfs)
dfs <- dfs[dfs, df]
cbin(dfs, df[1])
cbind(dfs, df[1])
dfs <- cbind(dfs, df[1])
clust_data = df2[, c("song_popularity", "song_duration_ms", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "loudness", "audio_mode", "spechiness", "tempo", "time_signature", "audio_valence")]
clust_data = dfs[, c("song_popularity", "song_duration_ms", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "loudness", "audio_mode", "spechiness", "tempo", "time_signature", "audio_valence")]
clust_data = dfs[, c("song_popularity ", "song_duration_ms", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "loudness", "audio_mode", "spechiness", "tempo", "time_signature", "audio_valence")]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
library(htmltools)
library(devtools)
library(caret)
library(NbClust)
library(rmarkdown)
df <- read_csv('song_data.csv')
View(df)
dfs <- as.data.frame(scale(df[2:15]))
View(dfs)
dfs <- cbind(dfs, df[1])
clust_data = dfs[, c("song_popularity", "song_duration_ms", "acousticness", "danceability", "energy", "instrumentalness", "key", "liveness", "loudness", "audio_mode", "spechiness", "tempo", "time_signature", "audio_valence")]
clust_data = dfs[, c(1:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 5, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
ggplot(df2, aes(x = BLK, y = Salary, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
ggplot(dfs, aes(x = BLK, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
ggplot(dfs, aes(x = BLK, y = song_popularity, color = performance_clusters,
shape = performance_clusters))
ggplot(dfs, aes(x = songduration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
clust_data = dfs[, c(2:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 5, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
dfs <- dfs[, -(dfs['song_duration_ms'] >= 8)]
clust_data = dfs[, c(2:14)]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
library(htmltools)
library(devtools)
library(caret)
library(NbClust)
library(rmarkdown)
df <- read_csv('song_data.csv')
View(df)
dfs <- as.data.frame(scale(df[2:15]))
View(dfs)
dfs <- cbind(dfs, df[1])
dfs <- dfs[-(dfs['song_duration_ms'] >= 8),]
clust_data = dfs[, c(2:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 5, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
# What does the kmeans_obj look like?
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
dfs[-(dfs['song_duration_ms'] >= 8),]
clust_data = dfs[, c(2:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 5, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
# What does the kmeans_obj look like?
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
dfs <- dfs[-(dfs['song_duration_ms'] >= 8),]
dfs[(dfs['song_duration_ms'] >= 8),]
dfs[-c(dfs['song_duration_ms'] >= 8),]
dfs[(dfs['song_duration_ms'] >= 8),]
dfs[~c(dfs['song_duration_ms'] >= 8),]
dfs[!(dfs['song_duration_ms'] >= 8),]
dfs[(dfs['song_duration_ms'] >= 8),]
dfs <- dfs[!(dfs['song_duration_ms'] >= 8),]
dfs[(dfs['song_duration_ms'] >= 8),]
clust_data = dfs[, c(2:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 5, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
# What does the kmeans_obj look like?
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
clust_data = dfs[, c(2:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 2, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
# What does the kmeans_obj look like?
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
clust_data = dfs[, c(2:14)]
set.seed(1)
kmeans_obj = kmeans(clust_data, centers = 13, algorithm = "Lloyd")
kmeans_obj
kmeans_obj$betweenss/kmeans_obj$totss
head(kmeans_obj)
kmeans_obj
performance_clusters = as.factor(kmeans_obj$cluster)
# What does the kmeans_obj look like?
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5"),
values = c("red", "blue", "green", "black", "orange")) +
theme_light()
ggplot(dfs, aes(x = song_duration_ms, y = song_popularity, color = performance_clusters,
shape = performance_clusters)) +
geom_point(size = 6) +
scale_color_manual(name = "Clusters",         #<- tell R which colors to use and
#   which labels to include in the legend
labels = c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5","Cluster 6", "Cluster 7", "Cluster 8", "Cluster 9", "Cluster 10", "Cluster 11", "Cluster 12", "Cluster 13"),
values = c("red", "blue", "green", "black", "orange", "pink", "gray", "yellow", "purple", "turquoise", "brown", "beige", "white")) +
theme_light()
